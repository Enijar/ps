{"version":3,"sources":["assets/test-landscape.png","config/vars.ts","config/images.ts","components/ps/styles.ts","components/ps/types.ts","components/ps/utils.ts","config/consts.ts","components/ps/ps.tsx","index.tsx"],"names":["white","black300","black200","black100","encode","svg","encodeURIComponent","TRANSPARENT_BACKGROUND","vars","Tool","Wrapper","styled","div","Inner","MAX_CANVAS_WIDTH","Canvas","Sidebar","Toolbar","Flex","clamp","value","min","max","Math","getPosition","event","element","x","y","getBoundingClientRect","left","top","width","height","abs","window","TouchEvent","touches","pageX","pageY","getPoints","pointGroups","pointGroupIndex","pointer","color","brushSize","size","settings","minD","p","pointGroup","undefined","points","a","b","lastPoint","length","sqrt","pow","getCursor","tool","move","brush","IS_TOUCH","Ps","src","React","useState","blob","setBlob","setPointGroups","setPointGroupIndex","down","setPointer","useRef","ratio","setSize","useMemo","lineCap","rotation","setRotation","setTool","startX","startY","lastX","lastY","position","setPosition","blur","saturation","hue","sepia","filters","setFilters","setColor","setBrushSize","scale","setScale","opacity","setOpacity","transform","cx","cy","s","join","download","useCallback","current","canvas","document","createElement","ctx","getContext","img","Image","onload","drawImage","toBlob","href","URL","createObjectURL","click","setAttribute","toString","base64","outerHTML","removeAttribute","useEffect","toDataURL","svgElement","downType","moveType","upType","addEventListener","onPointerDown","passive","onPointerMove","onPointerUp","removeEventListener","point","preventDefault","style","cursor","ref","viewBox","xmlns","xmlnsXlink","maxWidth","maxHeight","id","stdDeviation","type","values","xlinkHref","filter","map","index","stroke","fill","d","strokeWidth","strokeLinecap","strokeLinejoin","r","strokeMiterlimit","checked","onChange","e","target","step","parseFloat","parseInt","onClick","Style","createGlobalStyle","ReactDOM","render","StrictMode","testLandscape","getElementById"],"mappings":"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","file":"static/js/main.30af90a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/test-landscape.3381b063.png\";","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  colors: {\n    white: \"#ffffff\",\n    black300: \"#333\",\n    black200: \"#222\",\n    black100: \"#1c1c1c\",\n  },\n};\n","import vars from \"./vars\";\n\nfunction encode(svg: string): string {\n  return `data:image/svg+xml;utf8,${encodeURIComponent(svg)}`;\n}\n\nexport const TRANSPARENT_BACKGROUND = encode(\n  `<svg width=\"20\" height=\"20\" viewBox=\"0 0 40 40\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m0 0h20v20h-20z\" fill=\"#d7d7d7\"/><path d=\"m20 20h20v20h-20z\" fill=\"#d7d7d7\"/><g fill=\"#fff\"><path d=\"m20 0h20v20h-20z\"/><path d=\"m0 20h20v20h-20z\"/></g></svg>`\n);\n\nexport const MOVE_ICON = encode(\n  `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m2674 2900-23.08 19.23v-15.38h-23.07v23.07h15.38l-19.23 23.08-19.23-23.08h15.38v-23.07h-23.07v15.38l-23.08-19.23 23.08-19.23v15.38h23.07v-23.07h-15.38l19.23-23.08 19.23 23.08h-15.38v23.07h23.07v-15.38z\" fill=\"${vars.colors.white}\" fill-rule=\"evenodd\" transform=\"translate(-2574 -2850)\"/></svg>`\n);\n\nexport const ZOOM_ICON = encode(\n  `<svg width=\"100\" height=\"98.46\" viewBox=\"0 0 100 98.46\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m2210.36 2012.7-8.65 8.64-32.57-32.57a36.468 36.468 0 1 1 8.41-8.88zm-63.33-83.71a30.56 30.56 0 1 0 30.57 30.56 30.564 30.564 0 0 0 -30.57-30.56zm0 13.75a16.653 16.653 0 0 0 -9.16 2.75v-6.94a22.909 22.909 0 0 1 32.09 21h-6.12a16.809 16.809 0 0 0 -16.81-16.81z\" fill=\"${vars.colors.white}\" fill-rule=\"evenodd\" transform=\"translate(-2110.34 -1922.88)\"/></svg>`\n);\n","import styled from \"styled-components\";\nimport vars from \"../../config/vars\";\nimport { TRANSPARENT_BACKGROUND } from \"../../config/images\";\n\nconst MOBILE_WIDTH = 700;\nconst MAX_CANVAS_WIDTH = 800;\nconst MAX_SIDEBAR_WIDTH = 200;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  min-height: 100%;\n  background-color: ${vars.colors.black100};\n  color: ${vars.colors.white};\n  user-select: none;\n  padding: 1em;\n\n  button {\n    border: none;\n    color: ${vars.colors.black300};\n    background-color: ${vars.colors.white};\n    padding: 0.25em 1em;\n  }\n`;\n\nexport const Inner = styled.div`\n  width: 100%;\n  max-width: ${MAX_CANVAS_WIDTH + MAX_SIDEBAR_WIDTH}px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Canvas = styled.div`\n  flex: 1 0;\n  width: 100%;\n  max-width: ${MAX_CANVAS_WIDTH}px;\n\n  @media (max-width: ${MOBILE_WIDTH}px) {\n    flex: 0 1;\n  }\n\n  svg {\n    display: block;\n    background-repeat: repeat;\n    background-image: url(${TRANSPARENT_BACKGROUND});\n  }\n`;\n\nexport const Sidebar = styled.div`\n  align-self: flex-start;\n  padding: 1em;\n  width: 100%;\n  max-width: ${MAX_SIDEBAR_WIDTH}px;\n  background-color: ${vars.colors.black300};\n\n  @media (max-width: ${MOBILE_WIDTH}px) {\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 100%;\n  }\n`;\n\nexport const Toolbar = styled.div`\n  width: 100%;\n  padding: 1em;\n  background-color: ${vars.colors.black300};\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${MOBILE_WIDTH}px) {\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n`;\n","export type Props = {\n  src: string;\n};\n\nexport type Point = {\n  x: number;\n  y: number;\n};\n\nexport type PointGroup = {\n  color: string;\n  size: number;\n  points: Point[];\n};\n\nexport type Pointer = {\n  down: boolean;\n  x: number;\n  y: number;\n};\n\nexport type Settings = {\n  lineCap: \"round\";\n  p: number;\n};\n\nexport type Position = {\n  x: number;\n  y: number;\n  startX: number;\n  startY: number;\n  lastX: number;\n  lastY: number;\n};\n\nexport type Filters = {\n  blur: number;\n  saturation: number;\n  hue: number;\n  sepia: boolean;\n};\n\nexport type Size = {\n  width: number;\n  height: number;\n  ratio: number;\n};\n\nexport type GetPointsProps = {\n  pointGroups: PointGroup[];\n  pointGroupIndex: number;\n  pointer: Pointer;\n  color: string;\n  brushSize?: number;\n  size: {\n    width: number;\n    height: number;\n  };\n  settings: Settings;\n};\n\nexport enum Tool {\n  move,\n  brush,\n}\n","import {GetPointsProps, Point, PointGroup, Tool} from \"./types\";\n\nexport function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport function dist(a: Point, b: Point): number {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\n\nexport function getPosition(\n  event: TouchEvent | PointerEvent,\n  element: SVGSVGElement | null\n): Point {\n  if (element === null) return { x: 0, y: 0 };\n  let { left, top, width, height } = element.getBoundingClientRect();\n  left = Math.abs(left);\n  top = Math.abs(top);\n  let x;\n  let y;\n  if (event instanceof window.TouchEvent) {\n    x = event.touches[0]?.pageX ?? 0;\n    y = event.touches[0]?.pageY ?? 0;\n  } else {\n    x = event.pageX;\n    y = event.pageY;\n  }\n  return {\n    x: clamp(x - left, 0, width) / width,\n    y: clamp(y - top, 0, height) / height,\n  };\n}\n\nexport function getPoints({\n  pointGroups,\n  pointGroupIndex,\n  pointer,\n  color,\n  brushSize = 10,\n  size,\n  settings,\n}: GetPointsProps): PointGroup[] {\n  const minD = brushSize / Math.min(size.width, size.height) / settings.p;\n  const pointGroup = pointGroups[pointGroupIndex];\n  if (pointGroup === undefined) {\n    pointGroups[pointGroupIndex] = {\n      color,\n      size: brushSize,\n      points: [{ x: pointer.x, y: pointer.y }],\n    };\n    return [...pointGroups];\n  }\n  const lastPoint = pointGroup.points[pointGroup.points.length - 1];\n  if (lastPoint !== undefined) {\n    const d = dist(lastPoint, pointer);\n    if (d < minD) return pointGroups;\n  }\n  pointGroups[pointGroupIndex].color = color;\n  pointGroups[pointGroupIndex].points = [\n    ...pointGroups[pointGroupIndex].points,\n    { x: pointer.x, y: pointer.y },\n  ];\n  return [...pointGroups];\n}\n\nexport function getCursor(tool: Tool): string {\n  switch (tool) {\n    case Tool.move:\n      return \"move\";\n    case Tool.brush:\n      return \"none\";\n    default:\n      return \"default\";\n  }\n}\n","export const IS_TOUCH = \"ontouchstart\" in window;\n","import React from \"react\";\nimport { Canvas, Flex, Inner, Sidebar, Toolbar, Wrapper } from \"./styles\";\nimport { getPoints, getPosition, getCursor } from \"./utils\";\nimport {\n  Filters,\n  Pointer,\n  PointGroup,\n  Position,\n  Props,\n  Settings,\n  Size,\n  Tool,\n} from \"./types\";\nimport { IS_TOUCH } from \"../../config/consts\";\n\nexport default function Ps({ src }: Props) {\n  const [blob, setBlob] = React.useState<string>(\"\");\n  const [pointGroups, setPointGroups] = React.useState<PointGroup[]>([]);\n  const [pointGroupIndex, setPointGroupIndex] = React.useState<number>(-1);\n  const [pointer, setPointer] = React.useState<Pointer>({\n    down: false,\n    x: 0,\n    y: 0,\n  });\n  const svg = React.useRef<SVGSVGElement | null>(null);\n  const [size, setSize] = React.useState<Size>({\n    width: 0,\n    height: 0,\n    ratio: 1,\n  });\n  const settings = React.useMemo<Settings>(() => {\n    return {\n      lineCap: \"round\",\n      p: 3 * size.ratio, // precision\n    };\n  }, [size]);\n  const [rotation, setRotation] = React.useState<number>(0);\n  const [tool, setTool] = React.useState<Tool>(Tool.move);\n  const [position, setPosition] = React.useState<Position>({\n    x: 0,\n    y: 0,\n    startX: 0,\n    startY: 0,\n    lastX: 0,\n    lastY: 0,\n  });\n  const [filters, setFilters] = React.useState<Filters>({\n    blur: 0,\n    saturation: 1,\n    hue: 0,\n    sepia: false,\n  });\n  const [color, setColor] = React.useState<string>(\"#000000\");\n  const [brushSize, setBrushSize] = React.useState<number>(10);\n  const [scale, setScale] = React.useState<number>(1);\n  const [opacity, setOpacity] = React.useState<number>(1);\n  const transform = React.useMemo(() => {\n    const cx = size.width / 2;\n    const cy = size.height / 2;\n    const s = scale;\n    return [\n      `translate(${position.x * size.width} ${position.y * size.height})`,\n      `rotate(${rotation}, ${size.width / 2}, ${size.height / 2})`,\n      `matrix(${s}, 0, 0, ${s}, ${cx - s * cx}, ${cy - s * cy})`,\n    ].join(\" \");\n  }, [size, scale, position, rotation]);\n\n  const download = React.useCallback(() => {\n    const svgElement: SVGSVGElement | null = svg.current;\n    if (svgElement === null) return;\n    const canvas = document.createElement(\"canvas\");\n    const ctx: CanvasRenderingContext2D | null = canvas.getContext(\"2d\");\n    if (ctx === null) return;\n    const img = new Image();\n    img.onload = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0, img.width, img.height);\n      canvas.toBlob((blob) => {\n        const a = document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = \"image.png\";\n        a.click();\n      }, \"image/png\");\n    };\n    if (svg.current === null) return;\n    svg.current.setAttribute(\"width\", size.width.toString());\n    svg.current.setAttribute(\"height\", size.height.toString());\n    const base64 = encodeURIComponent(svg.current.outerHTML);\n    img.src = `data:image/svg+xml;utf8,${base64}`;\n    svg.current.removeAttribute(\"width\");\n    svg.current.removeAttribute(\"height\");\n  }, [svg, size]);\n\n  React.useEffect(() => {\n    const img = new Image();\n    img.onload = () => {\n      const canvas = document.createElement(\"canvas\");\n      const ctx: CanvasRenderingContext2D | null = canvas.getContext(\"2d\");\n      // @todo resize image to improve performance on large images\n      if (ctx !== null) {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n        setBlob(canvas.toDataURL(\"image/png\"));\n      }\n      setSize({\n        width: img.width,\n        height: img.height,\n        ratio: img.width / img.height,\n      });\n    };\n    img.src = src;\n  }, [src]);\n\n  React.useEffect(() => {\n    const svgElement: SVGSVGElement | null = svg.current;\n\n    if (svgElement === null) return;\n\n    function onPointerDown(event: TouchEvent | PointerEvent) {\n      const point = getPosition(event, svgElement);\n      if (tool === Tool.brush) {\n        setPointGroupIndex((pointGroupIndex) => pointGroupIndex + 1);\n        setPointGroups((pointGroups) => [\n          ...pointGroups,\n          { color, size: brushSize, points: [point, point] },\n        ]);\n      }\n      setPosition((position) => ({\n        ...position,\n        startX: point.x,\n        startY: point.y,\n      }));\n      setPointer((pointer) => ({ ...pointer, ...point, down: true }));\n    }\n\n    function onPointerMove(event: TouchEvent | PointerEvent) {\n      event.preventDefault();\n      const point = getPosition(event, svgElement);\n      setPointer((pointer) => {\n        return { ...pointer, ...point };\n      });\n    }\n\n    function onPointerUp() {\n      setPosition((position) => ({\n        ...position,\n        lastX: position.x,\n        lastY: position.y,\n      }));\n      setPointer((pointer) => ({ ...pointer, down: false }));\n    }\n\n    const downType = IS_TOUCH ? \"touchstart\" : \"pointerdown\";\n    const moveType = IS_TOUCH ? \"touchmove\" : \"pointermove\";\n    const upType = IS_TOUCH ? \"touchend\" : \"pointerup\";\n\n    svgElement.addEventListener(downType, onPointerDown, { passive: false });\n    window.addEventListener(moveType, onPointerMove, { passive: false });\n    window.addEventListener(upType, onPointerUp, { passive: false });\n    return () => {\n      svgElement.removeEventListener(downType, onPointerDown);\n      window.removeEventListener(moveType, onPointerMove);\n      window.removeEventListener(upType, onPointerUp);\n    };\n  }, [svg, tool, size, color, brushSize]);\n\n  React.useEffect(() => {\n    if (!pointer.down || tool !== Tool.brush) return;\n    setPointGroups((pointGroups) =>\n      getPoints({\n        pointGroups,\n        pointGroupIndex,\n        pointer,\n        color,\n        size,\n        settings,\n      })\n    );\n  }, [tool, pointer, pointGroupIndex, color, size, settings]);\n\n  React.useEffect(() => {\n    if (!pointer.down || tool === Tool.brush) return;\n    setPosition((position) => ({\n      ...position,\n      x: pointer.x - position.startX + position.lastX,\n      y: pointer.y - position.startY + position.lastY,\n    }));\n  }, [pointer, tool]);\n\n  return (\n    <Wrapper>\n      <Inner>\n        <Toolbar>toolbar</Toolbar>\n\n        <Flex>\n          <Canvas style={{ cursor: getCursor(tool) }}>\n            <svg\n              ref={svg}\n              viewBox={`0 0 ${size.width} ${size.height}`}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n              style={{\n                maxWidth: `${size.width}px`,\n                maxHeight: `${size.height}px`,\n              }}\n            >\n              <filter id=\"filters\">\n                {/* blur */}\n                <feGaussianBlur stdDeviation={filters.blur} />\n                {/* hur */}\n                <feColorMatrix\n                  type=\"hueRotate\"\n                  values={filters.hue.toString()}\n                />\n                {/* saturation */}\n                <feColorMatrix\n                  type=\"saturate\"\n                  values={filters.saturation.toString()}\n                />\n                {/* sepia */}\n                {filters.sepia && (\n                  <feColorMatrix\n                    type=\"matrix\"\n                    values=\"0.39 0.769 0.189 0 0 0.349 0.686 0.168 0 0 0.272 0.534 0.131 0 0 0 0 0 1 0\"\n                  />\n                )}\n              </filter>\n\n              <image\n                xlinkHref={blob}\n                filter=\"url(#filters)\"\n                transform={transform}\n                opacity={opacity}\n              />\n\n              {pointGroups.map((pointGroup, index) => {\n                return (\n                  <path\n                    key={index}\n                    stroke={pointGroup.color}\n                    fill=\"none\"\n                    d={`M${pointGroup.points\n                      .map((p) =>\n                        [p.x * size.width, p.y * size.height].join(\",\")\n                      )\n                      .join(\",\")}`}\n                    strokeWidth={pointGroup.size}\n                    strokeLinecap={settings.lineCap}\n                    strokeLinejoin=\"round\"\n                  />\n                );\n              })}\n              {tool === Tool.brush && (\n                <circle\n                  cx={(pointer.x * size.width).toString()}\n                  cy={(pointer.y * size.height).toString()}\n                  r={brushSize / 2}\n                  fill={color}\n                  strokeMiterlimit=\"10\"\n                />\n              )}\n            </svg>\n          </Canvas>\n\n          <Sidebar>\n            <div>\n              <label>\n                draw:\n                <input\n                  type=\"checkbox\"\n                  checked={tool === Tool.brush}\n                  onChange={(e) =>\n                    setTool(e.target.checked ? Tool.brush : Tool.move)\n                  }\n                />\n              </label>\n            </div>\n            <div>\n              <label>\n                sepia:\n                <input\n                  type=\"checkbox\"\n                  checked={filters.sepia}\n                  onChange={(e) =>\n                    setFilters((filters) => ({\n                      ...filters,\n                      sepia: e.target.checked,\n                    }))\n                  }\n                />\n              </label>\n            </div>\n            <div>\n              <label>color({color}):</label>\n              <br />\n              <input\n                type=\"color\"\n                value={color}\n                onChange={(e) => setColor(e.target.value)}\n              />\n            </div>\n            <div>\n              <label>saturation({filters.saturation}):</label>\n              <br />\n              <input\n                type=\"range\"\n                min={0}\n                max={3}\n                step={0.01}\n                value={filters.saturation}\n                onChange={(e) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    saturation: parseFloat(e.target.value),\n                  }))\n                }\n              />\n            </div>\n            <div>\n              <label>brushSize({brushSize}px):</label>\n              <br />\n              <input\n                type=\"range\"\n                min={0}\n                max={100}\n                step={1}\n                value={brushSize}\n                onChange={(e) => setBrushSize(parseInt(e.target.value, 10))}\n              />\n            </div>\n            <div>\n              <label>rotation({rotation}&deg;):</label>\n              <br />\n              <input\n                type=\"range\"\n                min={0}\n                max={360}\n                step={1}\n                value={rotation}\n                onChange={(e) => setRotation(parseInt(e.target.value, 10))}\n              />\n            </div>\n            <div>\n              <label>blur({filters.blur}px):</label>\n              <br />\n              <input\n                type=\"range\"\n                min={0}\n                max={100}\n                step={1}\n                value={filters.blur}\n                onChange={(e) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    blur: parseInt(e.target.value, 10),\n                  }))\n                }\n              />\n            </div>\n            <div>\n              <label>hue({filters.blur}&deg;):</label>\n              <br />\n              <input\n                type=\"range\"\n                min={0}\n                max={360}\n                step={1}\n                value={filters.hue}\n                onChange={(e) =>\n                  setFilters((filters) => ({\n                    ...filters,\n                    hue: parseInt(e.target.value, 10),\n                  }))\n                }\n              />\n            </div>\n            <div>\n              <label>scale({scale}):</label>\n              <br />\n              <input\n                type=\"range\"\n                min={0.1}\n                max={2}\n                step={0.01}\n                value={scale}\n                onChange={(e) => setScale(parseFloat(e.target.value))}\n              />\n            </div>\n            <div>\n              <label>opacity({opacity}):</label>\n              <br />\n              <input\n                type=\"range\"\n                min={0}\n                max={1}\n                step={0.01}\n                value={opacity}\n                onChange={(e) => setOpacity(parseFloat(e.target.value))}\n              />\n            </div>\n            <div>\n              <button onClick={download}>download</button>\n            </div>\n          </Sidebar>\n        </Flex>\n      </Inner>\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\nimport testLandscape from \"./assets/test-landscape.png\";\nimport Ps from \"./components/ps/ps\";\n\nconst Style = createGlobalStyle`\n  *, *:before, *:after {\n    box-sizing: border-box;\n    font-family: inherit;\n    font-size: inherit;\n    line-height: inherit;\n    color: inherit;\n    margin: 0;\n    padding: 0;\n  }\n\n  html, body, #root {\n    width: 100%;\n    height: 100%;\n  }\n\n  html {\n    font-size: 16px;\n    font-family: Arial, sans-serif;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <Style />\n      <Ps src={testLandscape} />\n    </>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}